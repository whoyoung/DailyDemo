disabled_rules: # rule identifiers to exclude from running
  - identifier_name #禁用： 所有的标识名检查，这个历史背负太重，改不完
  - trailing_whitespace # 禁用： 每一行最后的空白字符
  - function_parameter_count # 禁用： 函数参数个数
  - file_length
  - type_body_length
  - shorthand_operator # 禁用： 推荐使用联合运算符 （*=， /=）
  - conditional_returns_on_newline # 禁用： 条件语句不能写在同一行，条件返回语句应该在新的一行
  - empty_enum_arguments # 禁用：当枚举与关联类型匹配时，如果不使用它们，参数可以省略
  - explicit_acl # 禁用：所有属性和方法声明需要明确指定修饰关键字
  - private_over_fileprivate #推荐：private 不建议：fileprivate
  - multiple_closures_with_trailing_closure #传递多个闭包参数时，不应使用结尾的闭包语法

# some rules are only opt-in
opt_in_rules:
  # - empty_count # 启用：判断序列元素个数，请使用 empty 而不是 count == 0
  - empty_string # 优先使用isEmpty判断，而不是将字符串与空字符串文字进行比较
  - function_body_length # 启用：函数体的行数，超过 40 warning， 超过 100 error
  - cyclomatic_complexity # 启用 循环复杂度
  - prohibited_super_call #某些特殊的 override 方法，禁止调用 super method
  - force_unwrapping #避免强制解包
  - contains_over_first_not_nil #推荐使用 contains，避免使用 first(where:) != nil 与 firstIndex(where:) != nil
  - discarded_notification_center_observer #当使用 block 注册通知中心 observer 的时候， 应该存储函数返回的 observer, 以便之后的删除
  - discouraged_optional_boolean #推荐使用非可选的bool值
  - first_where #使用 `.first(where:)` 代替 `.filter { }.first`
  - identical_operands #比较两个相同的操作数可能是一个错误
  - last_where #推荐在集合中使用：.last(where:) 不推荐使用： .filter { }.last
  - legacy_multiple #推荐使用isMultiple(of:)函数，不推荐使用余数运算符（%）
  - literal_expression_end_indentation #数组和字典文字的结尾应与开始它的行具有相同的缩进
  - multiline_parameters #函数和方法参数应该在同一行上，或者每行一个
  - overridden_super_call #方法需要调用 super method
  - redundant_type_annotation #变量不应具有冗余类型注释 建议 var url = URL() 不建议 var url : URL = URL()
  - sorted_first_last #优先使用min()或max() 不建议使用 sorted().first或sorted().last
  - switch_case_on_newline #switch 的 case 需要新启一行
  - unowned_variable_capture #最好将引用捕获为弱引用以避免潜在的崩溃


excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Tests
  - Example
  - Resources

analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self
  - unused_declaration
  - unused_import

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 150
# they can set both implicitly with an array
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  excluded: iPhone # excluded via string
identifier_name:
  min_length: # only min_length
    error: 4 # only error
  excluded: # excluded via string array
    - URL
    - _addNotificationBlock(_:)
    - _nsError
    - _nsErrorDomain
    - id
    - pk
    - to

cyclomatic_complexity:
  warning: 60 # 10
  error: 61 # 15
  ignores_case_statements: true

function_body_length:
  - 400 # warning
  - 1500 # error

large_tuple: 3

trailing_comma:
  mandatory_comma: true
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)

custom_rules:
  ab_test_recovery:
    name: "AB Test Recovery"
    regex: '^ *//+[ \S]* ABTestHelper\.+'
    match_kinds:
      - comment
      - doccomment
    message: "AB Test Recovery. 调试期间注释掉的 ab test,上线前记得恢复"
    severity: warning
  url_Check:
    name: "URL Check"
    regex: '(https?|ftp|file)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]+[()（）]'
    match_kinds: string
    message: "URL 中发现有 '(' 或 ')' 或 '（' 或 '）' ，请注意确认正确性"
    severity: warning
